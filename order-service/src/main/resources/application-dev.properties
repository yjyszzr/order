# 开发环境配置
# 数据源配置，请修改为你项目的实际配\u7F6
eureka.instance.ip-address=106.13.58.201
eureka.instance.app-group-name=test

server.port=7075
eureka.client.group.default=test
eureka.client.service-url.defaultZone=http://106.13.58.201:7070/eureka/
#正式环境数据库
#spring.datasource1.druid.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource1.druid.url=jdbc:mysql://39.107.102.22:3306/cxm_app
#spring.datasource1.druid.username=cxm_user_rw
#spring.datasource1.druid.password=YNShTBmL1X1X
#测试环境数据库
spring.datasource1.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource1.druid.url=jdbc:mysql://106.13.58.201:3306/cxm_test
spring.datasource1.druid.username=root
spring.datasource1.druid.password=123456

# 设置针对hello-service服务的连接超时时间
order-service.ribbon.ConnectTimeout=3000
# 设置针对hello-service服务的读取超时时间
order-service.ribbon.ReadTimeout=10000
# 设置针对hello-service服务所有操作请求都进行重试
order-service.ribbon.OkToRetryOnAllOperations=true
# 设置针对hello-service服务切换实例的重试次数
order-service.ribbon.MaxAutoRetriesNextServer=2
# 设置针对hello-service服务的当前实例的重试次数
order-service.ribbon.MaxAutoRetries=1

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource1.druid.initial-size=5
spring.datasource1.druid.minIdle=5
spring.datasource1.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource1.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource1.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource1.druid.minEvictableIdleTimeMillis=300000
spring.datasource1.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource1.druid.testWhileIdle=true
spring.datasource1.druid.testOnBorrow=false
spring.datasource1.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource1.druid.poolPreparedStatements=true
spring.datasource1.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource1.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource1.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000



#数据源2配置 腾讯云数据库
spring.datasource2.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource2.druid.url=jdbc:mysql://106.13.58.201:3306/store_test
spring.datasource2.druid.username=root
spring.datasource2.druid.password=CXM2019@123

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource2.druid.initial-size=5
spring.datasource2.druid.minIdle=5
spring.datasource2.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource2.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource2.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource2.druid.minEvictableIdleTimeMillis=300000
spring.datasource2.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource2.druid.testWhileIdle=true
spring.datasource2.druid.testOnBorrow=false
spring.datasource2.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource2.druid.poolPreparedStatements=true
spring.datasource2.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource2.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource2.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


#数据源配置 3
spring.datasource3.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource3.druid.url=jdbc:mysql://106.13.58.201:3306/cxm_lottery
spring.datasource3.druid.username=root
spring.datasource3.druid.password=123456
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource3.druid.initial-size=5
spring.datasource3.druid.minIdle=5
spring.datasource3.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource3.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource3.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource3.druid.minEvictableIdleTimeMillis=300000
spring.datasource3.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource3.druid.testWhileIdle=true
spring.datasource3.druid.testOnBorrow=false
spring.datasource3.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource3.druid.poolPreparedStatements=true
spring.datasource3.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource3.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource3.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

logging.level.root=debug
logging.level.tk.mybatis.springboot.mapper=TRACE
logging.level.tk.mybatis.simple.mapper=TRACE

mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis.mapper-locations=classpath:mapper/*.xml,classpath*:com/dl/shop/order/**/mapper/*.xml
mybatis.type-aliases-package=com.dl.shop.order.model
#mybatis.configuration.interceptors=com.github.pagehelper.PageHelper

#mapper
#mappers 多个接口时逗号隔开
mapper.mappers=com.dl.base.mapper.Mapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.page-size-zero=true
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count\=countSql

dl.img.file.pre.url=http\://t1.caixiaomi.net\:9809/
