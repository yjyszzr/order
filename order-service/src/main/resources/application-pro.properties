# \u5F00\u53D1\u73AF\u5883\u914D\u7F6E
# \u6570\u636E\u6E90\u914D\u7F6E\uFF0C\u8BF7\u4FEE\u6539\u4E3A\u4F60\u9879\u76EE\u7684\u5B9E\u9645\u914D\u7F6
eureka.client.group.order-service=pro
eureka.instance.app-group-name=pro

server.port=9421
eureka.client.group.default=pro
eureka.client.service-url.defaultZone=http://172.21.0.2:7070/eureka/

spring.datasource1.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource1.druid.url=jdbc:mysql://49.233.23.51:3306/cxm_app
spring.datasource1.druid.username=cxm_user_ssr
spring.datasource1.druid.password=CxM20190819@DB_mastSr


# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource1.druid.initial-size=5
spring.datasource1.druid.minIdle=5
spring.datasource1.druid.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource1.druid.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource1.druid.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource1.druid.minEvictableIdleTimeMillis=300000
spring.datasource1.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource1.druid.testWhileIdle=true
spring.datasource1.druid.testOnBorrow=false
spring.datasource1.druid.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource1.druid.poolPreparedStatements=true
spring.datasource1.druid.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource1.druid.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource1.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


#数据源2配置 腾讯云数据库 store remote prod
spring.datasource2.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource2.druid.url=jdbc:mysql://62.234.222.65:3306/store
spring.datasource2.druid.username=hanghang_db
spring.datasource2.druid.password=hanghangabc2o18!
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource2.druid.initial-size=5
spring.datasource2.druid.minIdle=5
spring.datasource2.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource2.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource2.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource2.druid.minEvictableIdleTimeMillis=300000
spring.datasource2.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource2.druid.testWhileIdle=true
spring.datasource2.druid.testOnBorrow=false
spring.datasource2.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource2.druid.poolPreparedStatements=true
spring.datasource2.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource2.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource2.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#数据源配置
spring.datasource3.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource3.druid.url=jdbc:mysql://49.233.23.51:3306/cxm_lottery
spring.datasource3.druid.username=cxm_user_ssr
spring.datasource3.druid.password=CxM20190819@DB_mastSr
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource3.druid.initial-size=5
spring.datasource3.druid.minIdle=5
spring.datasource3.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource3.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource3.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource3.druid.minEvictableIdleTimeMillis=300000
spring.datasource3.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource3.druid.testWhileIdle=true
spring.datasource3.druid.testOnBorrow=false
spring.datasource3.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource3.druid.poolPreparedStatements=true
spring.datasource3.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource3.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource3.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

logging.level.root=INFO
logging.level.tk.mybatis.springboot.mapper=TRACE
logging.level.tk.mybatis.simple.mapper=TRACE

#mybatis.mapper-locations=classpath:mapper/*.xml,classpath*:com/dl/shop/order/**/mapper/*.xml
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.dl.shop.order.model
#mybatis.configuration.interceptors=com.github.pagehelper.PageHelper

#mapper
#mappers \u591A\u4E2A\u63A5\u53E3\u65F6\u9017\u53F7\u9694\u5F00
mapper.mappers=com.dl.base.mapper.Mapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.page-size-zero=true
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count\=countSql

dl.img.file.pre.url=http://static.jinngu.club/